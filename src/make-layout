#!/bin/bash

# This file computes the detailed structure layout as defined by layout-list.
# The definitions here are designed to be automatically checked as part of every
# build to ensure that external formats don't change unexpectedly.
#
# This script has the following dependencies:
#
#   1.  Reads definitions from layout-list
#   2.  Compiles and runs show-layout.c with appropriate definitions
#   3.  Should be called from Makefile with the following variables defined:

: "${CC:?}"
: "${CFLAGS:?}"
: "${CPPFLAGS:?}"
: "${srcdir:?}"


set -e

HERE="$(dirname "$0")"
TOP="$HERE"/..
SRC="$TOP"/src

# Extracts fields from given structure in given header.  Because we're only
# using simple regular expressions it can be easily deceived, in particular
# nested structures just won't work and we make no attempt to handle function
# type fields.
extract_fields()
{
    local FILE="$1"
    local STRUCT="$2"

    sed -nr '
        # Start of a /* comment.  Either multiline or one line.
    :1
        \:/\*:{
            # Remove any one-line comments.  This will not correctly process two
            # comments bracketing code, but that is crazy writing anyhow
            s:/\*.*\*/::; t1

            # Delete this line of comment
            s:/\*.*::

        :2  # Consume all lines until we reach the end of the comment
            n
            s:.*\*/::; T2
        }
        # Remove // comments (that is easy)
        s://.*::
        p
    ' "$FILE" |
    sed 's/,/;/g; s/;/;\n/g' |       # Allow for comma separated fields
    sed -nr '
        # We are looking for "struct $STRUCT" all by its self
        / *\<struct\> \<'$STRUCT'\> *\{?$/{
            n
        :3
            # Recognise a field as a single declaration terminated with ;
            /;/{
                s/\[.*\]//                      # Get rid of any array specifier
                # Extract last word on line.  Does not work for function types.
                s/.*\<([0-9A-Za-z_]+)\> *;/\1/
                p
            }
            n
            /\}/!b3
        }
    '
}


cat <<EOF
# This file defines structure layout for important structures maintained as part
# of the FA archiver.  This file is automatically generated by make-layout from
# the definitions in layout-list.
EOF

# Insert disk version
echo
sed -rn '/^#define +(\<DISK_VERSION\>)/{s//\1/;p}' "$SRC"/disk.h

sed '/^#/d; /^$/d' "$HERE"/layout-list |

while read struct header extras; do
    for file in $extras $header; do
        echo '#include "'$file'"'
    done >field_header.h

    extract_fields "$SRC"/$header $struct |
    sed -r 's/(.*)/OFFSET(\1),/' >field_list.h

    EXTRA=(
        -I.
        -I$srcdir
        -DSTRUCT_NAME=$struct
        -DFIELD_LIST=\"field_list.h\"
        -DFIELD_HEADER=\"field_header.h\"
    )

    $CC $CPPFLAGS $CFLAGS ${EXTRA[*]} -o show-layout "$HERE"/show-layout.c
    echo
    ./show-layout
done
